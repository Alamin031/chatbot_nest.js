// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  avatar    String?
  roles     String
}
model Admin {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  avatar    String?
}

model Country {
  id        Int      @id @default(autoincrement())
  name      Json
  hasAreas  Boolean  @default(false)
  url       Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status    String   @default("Draft")
  icon     Assets[] @relation("CountryIcons")
}
model Car {
  id          Int      @id @default(autoincrement())
  carName     String
  description String?
  carImages   Assets[] @relation("CarImages")
  brandImages Assets[] @relation("CarBrandImages")
  carLogos    Assets[] @relation("CarLogos")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  status      String   @default("Draft")
}

model Assets {
  id        Int      @id @default(autoincrement())
  fileType  String?
  tags      Json[]
  height    Int?
  width     Int?
  slug      String
  fileName  String
  mimeType  String
  fileSize  Int?
  isImage   Boolean
  createdBy Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  countryId Int?
  carId     Int?
  country      Country? @relation("CountryIcons", fields: [countryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  carImages      Car[] @relation("CarImages")
  carBrandImages Car[] @relation("CarBrandImages")
  carLogos       Car[] @relation("CarLogos")
}
